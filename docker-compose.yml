services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 10s
      retries: 5

  migrate:
    image: migrate/migrate:4
    command: [
      "-path=/migrations",
      "-database=postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}",
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    profiles: ["migrate"]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_CONN_STR: "postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}"
    ports:
      - "${APP_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy